---
import Layout from '../layouts/Layout.astro';
---
<script>
	import axios from 'axios';
	// TODO: add ability to reroll

	let imageSrc = '';
	const fetchImage = async () => {
		const pun = new URLSearchParams(window.location.search).get('prompt');
		const business = new URLSearchParams(window.location.search).get('business');
		const myVal = document.querySelector('[data-your-prompt]') as HTMLElement;
		myVal.innerHTML = pun as string;
		console.log(pun);
		const modelList = ["sdbase", "dreamshaper", "sdlightning"]

		modelList.forEach(async (model) =>{
			try {
				const images = document.querySelectorAll('[data-image-' + model + ']');
				images.forEach((image) => {
					image.setAttribute('src', '');
				});
				const response = await axios.get('https://worker-billowing-limit-574d.stewart-schrieffer71.workers.dev/?p=' + pun + '&m=' + model + '&b=' + business, {
					 responseType: 'blob',
				});
				const blob = new Blob([response.data], { type: 'image/png' });
				const reader = new FileReader();

			reader.onload = () => {
				imageSrc = reader.result as string;
				const images = document.querySelectorAll('[data-image-' + model + ']');
				images.forEach((image) => {
					image.setAttribute('src', imageSrc);
				});
			};
			reader.readAsDataURL(blob);

			} catch (error: any) {
				console.error('Error fetching image:', error);
				const errorMessages = document.querySelectorAll('[data-error-message]');
				errorMessages.forEach((errorMessage) => {
					errorMessage.setAttribute('data-content', error.code);
				});
			}
		});
	};
	fetchImage();

</script>

<Layout title="test-cf-app">
	<main>
		<h1>Stewart's Prompt Tester</h1>
		<p class="mb-8 text-center">
			Let's take a look at what we could use for a background image. Click your favorite.
		</p>
		<p data-your-prompt class="mb-8 text-center">
			Let's take a look at what we could use for a background image. Click your favorite.
		</p>
		<div class="flex flex-wrap items-start justify-center gap-4">
			<div class="w-full sm:w-1/4 flex flex-col items-center">
				<h2 class="text-center mt-2">Dreamshaper</h2>
				<img data-image-dreamshaper class="w-full h-auto"/>
			</div>
			<div class="w-full sm:w-1/4 flex flex-col items-center">
				<h2 class="text-center mt-2">Stable Diffusion Lightning</h2>
				<img data-image-sdlightning class="w-full h-auto"/>
			</div>
			<div class="w-full sm:w-1/4 flex flex-col items-center">
				<h2 class="text-center mt-2">Stable Diffustion Base</h2>
				<img data-image-sdbase class="w-full h-auto"/>
			</div>
		</div>
		<p data-error-message></p>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 1000px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	textarea {
		color: black;
	}
	select {
		color: black;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	button {
		border-width: 1px;
		border-style: solid;
		border-radius: 15px;
	}
	button:disabled {
		background-color: grey;
}
	p::after {
		content: attr(data-content);
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
