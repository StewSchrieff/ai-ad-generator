---
import Layout from '../layouts/Layout.astro';
---
<script>
	import axios from 'axios';
	let imageSrc = '';
	const fetchSpecificImage = async (model: any) => {
		const refreshButton = document.querySelector('[data-refresh-' + model + ']');
		refreshButton?.addEventListener('click', () => fetchSpecificImage(model));
		refreshButton?.classList.add("hidden");
		const pun = new URLSearchParams(window.location.search).get('prompt');
		const business = new URLSearchParams(window.location.search).get('business');
		try {
			const images = document.querySelectorAll('[data-image-' + model + ']');
			images.forEach((image) => {
				image.setAttribute('src', '');
			});
			const response = await axios.get('https://worker-billowing-limit-574d.stewart-schrieffer71.workers.dev/?p=' + pun + '&m=' + model + '&b=' + business, {
				 responseType: 'blob',
			});
			const blob = new Blob([response.data], { type: 'image/png' });
			const reader = new FileReader();

		reader.onload = () => {
			imageSrc = reader.result as string;
			const images = document.querySelectorAll('[data-image-' + model + ']');
			images.forEach((image) => {
				image.setAttribute('src', imageSrc);
			});
			const resultContainer = document.querySelector('[data-container-' + model + ']');
			resultContainer?.classList.remove("invisible");
			resultContainer?.classList.add("shadow-[0_0_2px_#F4BC7C,inset_0_0_2px_#F4BC7C,0_0_5px_#7A460B,0_0_15px_#7A460B,0_0_30px_#7A460B]");
			refreshButton?.classList.remove("hidden");
		};
		reader.readAsDataURL(blob);

		} catch (error: any) {
			console.error('Error fetching image:', error);
			const errorMessages = document.querySelectorAll('[data-error-message]');
			errorMessages.forEach((errorMessage) => {
				errorMessage.setAttribute('data-content', error.code);
			});
			refreshButton?.classList.remove("hidden");
		}
	}
	const setup = async () => {
		const myVal = document.querySelector('[data-your-prompt]') as HTMLElement;
		const pun = new URLSearchParams(window.location.search).get('prompt');
		myVal.innerHTML = pun as string;
		const modelList = ["sdbase", "dreamshaper", "sdlightning"]

		modelList.forEach(async (model) =>{
			fetchSpecificImage(model);
		});
	};
	setup();


</script>

<Layout title="Ai Ad Generator">
	<main>
		<h1 class="text-cforange-600"><a href="/">Ai Ad Generator</a></h1>
		<h3 class="text-cforange-400"><i>Powered by <a class="underline" href="https://ai.cloudflare.com/">Cloudflare</a></i></h3>
		<p class="mb-8 text-center text-cforange-200">
			Let's create some images based on your slogan. Click your favorite.
		</p>
		<p data-your-prompt class="mb-8 text-center italic text-md text-cforange-600">
		</p>
		<div class="flex flex-wrap items-start justify-center items-center gap-6">
			<div data-container-dreamshaper class="invisible rounded-xl cursor-pointer w-full sm:w-1/4 flex flex-col justify-center items-center transition ease-in-out hover:scale-110 hover:shadow-cforange-200 duration-3000 self-stretch">
				<h2 class="min-h-20 text-3xl text-center my-2 text-cforange-600">Dreamshaper</h2>
				<img data-image-dreamshaper class="w-full h-auto"/>
				<button data-refresh-dreamshaper class="mt-4 max-w-16 rounded-xl mb-8 bg-cforange-50 text-black font-bold py-2 px-4 rounded shadow hover:bg-cforange-400 focus:outline-none focus:ring-2 focus:ring-gray-500">
					<img class="h-auto w-auto hover:animate-spin" src="/public/refresh-svgrepo-com.svg"></img>
				</button>
			</div>
			<div data-container-sdlightning class="invisible rounded-xl cursor-pointer w-full sm:w-1/4 flex flex-col justify-center items-center transition ease-in-out hover:scale-110 hover:shadow-cforange-200 duration-3000 self-stretch">
				<h2 class="min-h-20 text-3xl text-center my-2 text-cforange-600">Stable Diffusion Lightning</h2>
				<img data-image-sdlightning class="w-full h-auto"/>
				<button data-refresh-sdlightning class="mt-4 max-w-16 rounded-xl mb-8 bg-cforange-50 text-black font-bold py-2 px-4 rounded shadow hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-500">
					<img class="h-auto w-auto hover:animate-spin" src="/public/refresh-svgrepo-com.svg"></img>
				</button>
			</div>
			<div data-container-sdbase class="invisible rounded-xl cursor-pointer w-full sm:w-1/4 flex flex-col justify-center items-center transition ease-in-out hover:scale-110 hover:shadow-cforange-200 duration-3000 self-stretch">
				<h2 class="min-h-20 text-3xl text-center my-2 text-cforange-600">Stable Diffustion Base</h2>
				<img data-image-sdbase class="w-full h-auto"/>
				<button data-refresh-sdbase class="mt-4 max-w-16 rounded-xl mb-8 bg-cforange-50 text-black font-bold py-2 px-4 rounded shadow hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-500">
					<img class="h-auto w-auto hover:animate-spin" src="/public/refresh-svgrepo-com.svg"></img>
				</button>
			</div>
		</div>
		<p data-error-message></p>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 1000px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	textarea {
		color: black;
	}
	select {
		color: black;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	button {
		border-width: 1px;
		border-style: solid;
		border-radius: 15px;
	}
	p::after {
		content: attr(data-content);
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
	}
	h3 {
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}	
</style>
