---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
---
<script>
  import axios from 'axios';

  let imageSrc = '';

  const fetchImage = async () => {
    try {
      // TODO: Add prompt as query param
      const response = await axios.get('https://worker-billowing-limit-574d.stewart-schrieffer71.workers.dev/', {
        responseType: 'blob',
      });
      const blob = new Blob([response.data], { type: 'image/png' });
      const reader = new FileReader();

      reader.onload = () => {
        imageSrc = reader.result as string;
	const images = document.querySelectorAll('[data-image]');
	images.forEach((image) => {
		image.setAttribute('src', imageSrc);
	  });
      };
      reader.readAsDataURL(blob);

    } catch (error) {
      console.error('Error fetching image:', error);
    }
  };

  const buttons = document.querySelectorAll('[data-button]');
  buttons.forEach((button) => {
	button.addEventListener('click', () => fetchImage());
  });

</script>

<Layout title="test-cf-app">
	<main>
		<h1>test-cf-app</h1>
		<p class="instructions">
			The button below will create an AI thingy.
		</p>
		<button data-button class="bg-white text-black font-bold py-2 px-4 rounded shadow hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-500">This is a button</button>
		<img data-image/>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	button {
		border-width: 1px;
		border-style: solid;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
