---
import Layout from '../layouts/Layout.astro';
---
<script>
import { navigate } from 'astro/virtual-modules/transitions-router.js';
import axios from 'axios';

	const navigateToImages = (model: String, promptInput: String) => {
		console.warn(model);
		const content = document.querySelector('[data-response-' + model + ']')?.innerHTML;
		const encodedContent = encodeURIComponent(content as string);
		const url = `/image?prompt=${encodedContent}&business=${promptInput}`;
		console.log(url);
		// window.location.href = url;
		navigate(url);
	}

	const processPun = (text: any) => {
		// return a random pun from the AI response
		const randomNum = Math.random();

		let startIndex, endIndex;
		if (randomNum < 0.5) {
			startIndex = text.indexOf('1') + 1;
			endIndex = text.indexOf('2');
		} else {
			startIndex = text.indexOf('2') + 1;
			endIndex = text.indexOf('3');
		}

		if (startIndex === -1 || endIndex === -1 || startIndex >= endIndex) {
			// had trouble processing it
			return "We had trouble processing this one, so here's the raw AI output: " + text;
		}
		return text.substring(startIndex, endIndex).replace(/"/g, "").replace(/[0-3.()]/g, '').trim();


	}
	const genText = async () => {
		const promptInput = document.querySelector('[data-prompt-input]') as HTMLTextAreaElement;
		const modelList = ["llamaFP", "llamaInt", "mistral", "starling", "zephyr"]

		modelList.forEach(async (model) =>{
			try {
				const resultContainers = document.querySelectorAll('[data-response-container-' + model + ']');
				const resultDisplays = document.querySelectorAll('[data-response-' + model + ']');
				const selectFavorite = document.querySelector('[data-select-favorite]');
				selectFavorite?.classList.remove("hidden");
				const container = document.querySelector('[data-container]');
				resultDisplays.forEach((resultDisplay) => {
					resultDisplay.innerHTML = "...";
				});
				const response = await axios.get('https://worker-billowing-limit-574d.stewart-schrieffer71.workers.dev/?p=' + promptInput?.value + '&m=' + model);
				container?.classList.remove("hidden");

				resultDisplays.forEach((resultDisplay) => {
					resultDisplay.innerHTML = processPun(response.data.result.response);
				});
				resultContainers.forEach((resultContainer) => {
					resultContainer.addEventListener('click', () => navigateToImages(model, promptInput?.value));
					resultContainer.classList.add("shadow-[0_0_2px_#F4BC7C,inset_0_0_2px_#F4BC7C,0_0_5px_#7A460B,0_0_15px_#7A460B,0_0_30px_#7A460B]");
				});

			} catch (error: any) {
				console.error('Error fetching data from ai model:', error);
			}
		});
	};

	const buttons = document.querySelectorAll('[data-button]');
	buttons.forEach((button) => {
		button.addEventListener('click', () => genText());
	});

	const textarea = document.querySelector('[data-prompt-input]') as HTMLTextAreaElement;
	const button = document.querySelector('[data-button]') as HTMLButtonElement;

	// Add an 'input' event listener to the textarea
	textarea?.addEventListener('input', function() {
		// Check if the textarea value is not empty
		if (textarea?.value.trim() !== '') {
			// Enable the button
			button.disabled = false;
			button?.removeAttribute('disabled');
		} else {
		        // Disable the button
			button.disabled = true;
		}
	});

</script>

<Layout title="Ai Ad Generator">
	<div transition:name="title">
		<h1 class="text-cforange-600">Ai Ad Generator</h1>
		<h3 class="text-cforange-400"><i>Powered by <a class="underline" href="https://ai.cloudflare.com/">Cloudflare</a></i></h3>
	</div>
	<div class="flex flex-wrap justify-center text-cforange-200">
		<p class="mb-8 text-center">
			Let's create a sweet flyer for your <i>(fictional?)</i> business!
		</p>
		<p class="mb-8 text-center">
			Let's start by creating a punny slogan. What kind of business do you need an ad for?
		</p>
	</div>
	<textarea data-prompt-input placeholder="The more visual, the better! eg: Ice Cream Store, Guitar Shop, Camping Equipment Retailer" name="prompt" class="text-cforange-200 mb-8 w-full px-3 py-2 border border-cforange-700 rounded-md bg-cforange-950 placeholder-cforange-300 placeholder-opacity-50 shadow-md focus:outline-none focus:ring-2 focus:ring-cforange-600"/>
	<div class="flex flex-wrap justify-center">
		<button data-button  disabled class="rounded-xl mb-8 bg-cforange-600 text-cforange-950 font-bold py-2 px-4 rounded shadow hover:bg-cforange-200 focus:outline-none">Generate Puns</button>
	</div>
	<h2 data-select-favorite class="hidden text-4xl text-center mb-8 text-cforange-200">Select your favorite slogan!</h2>
	<div data-container class="hidden transition-ease-in-out text-cforange-200 flex flex-wrap items-start justify-center gap-6">
		<div data-response-container-mistral class="rounded-xl cursor-pointer w-full sm:w-1/4 flex flex-col justify-center items-center transition ease-in-out hover:scale-110 hover:shadow-cforange-200 duration-3000 self-stretch">
			<h2 class="text-3xl text-center mt-2 text-cforange-600">Mistral</h2>
			<p data-response-mistral class="text-center w-full h-auto mb-2"></p>
		</div>
		<div data-response-container-llamaFP class="rounded-xl cursor-pointer w-full sm:w-1/4 flex flex-col justify-center items-center transition ease-in-out hover:scale-110 hover:shadow-cforange-200 duration-3000 self-stretch">
			<h2 class="text-3xl text-center mt-2 text-cforange-600">Llama FP</h2>
			<p data-response-llamaFP class="text-center w-full h-auto mb-2"></p>
		</div>
		<div data-response-container-llamaInt class="rounded-xl cursor-pointer w-full sm:w-1/4 flex flex-col justify-center items-center transition ease-in-out hover:scale-110 hover:shadow-cforange-200 duration-3000 self-stretch">
			<p class="text-3xl text-center mt-2 text-cforange-600">Llama Int</p>
			<p data-response-llamaInt class="text-center w-full h-auto mb-2"></p>
		</div>
		<div data-response-container-starling class="rounded-xl cursor-pointer w-full sm:w-1/4 flex flex-col justify-center items-center transition ease-in-out hover:scale-110 hover:shadow-cforange-200 duration-3000 self-stretch">
			<h2 class="text-3xl text-center mt-2 text-cforange-600">Starling</h2>
			<p data-response-starling class="text-center w-full h-auto mb-2"></p>
		</div>
		<div data-response-container-zephyr class="rounded-xl cursor-pointer w-full sm:w-1/4 flex flex-col justify-center items-center transition ease-in-out hover:scale-110 hover:shadow-cforange-200 duration-3000 self-stretch">
			<h2 class="text-3xl text-center mt-2 text-cforange-600">Zephyr</h2>
			<p data-response-zephyr class="text-center w-full h-auto mb-2"></p>
		</div>
	</div>
</Layout>

<style>
	select {
		color: black;
	}
	button {
		border-width: 1px;
		border-style: solid;
	}
	textarea {
		resize: none;
	}
	button:disabled {
		background-color: grey;
}
	p::after {
		content: attr(data-content);
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
	}
	h3 {
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
