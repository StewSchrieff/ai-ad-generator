---
import Layout from '../layouts/Layout.astro';
---
<script>
	import axios from 'axios';
	let imageSrc = '';
	const fetchSpecificImage = async (model: any) => {
		const refreshButton = document.querySelector('[data-refresh-' + model + ']');
		refreshButton?.addEventListener('click', () => fetchSpecificImage(model));
		refreshButton?.classList.add("hidden");
		const pun = new URLSearchParams(window.location.search).get('prompt');
		const business = new URLSearchParams(window.location.search).get('business');
		try {
			const images = document.querySelectorAll('[data-image-' + model + ']');
			images.forEach((image) => {
				image.setAttribute('src', '');
			});
			const response = await axios.get('https://worker-billowing-limit-574d.stewart-schrieffer71.workers.dev/?p=' + pun + '&m=' + model + '&b=' + business, {
				 responseType: 'blob',
			});
			const blob = new Blob([response.data], { type: 'image/png' });
			const reader = new FileReader();

		reader.onload = () => {
			imageSrc = reader.result as string;
			const images = document.querySelectorAll('[data-image-' + model + ']');
			images.forEach((image) => {
				image.setAttribute('src', imageSrc);
			});
			const resultContainer = document.querySelector('[data-container-' + model + ']');
			resultContainer?.classList.remove("invisible");
			resultContainer?.classList.add("shadow-[0_0_2px_#F4BC7C,inset_0_0_2px_#F4BC7C,0_0_5px_#7A460B,0_0_15px_#7A460B,0_0_30px_#7A460B]");
			refreshButton?.classList.remove("hidden");
		};
		reader.readAsDataURL(blob);

		} catch (error: any) {
			console.error('Error fetching image:', error);
			const errorMessages = document.querySelectorAll('[data-error-message]');
			errorMessages.forEach((errorMessage) => {
				errorMessage.setAttribute('data-content', error.code);
			});
			refreshButton?.classList.remove("hidden");
		}
	}
	const setup = async () => {
		const myVal = document.querySelector('[data-your-prompt]') as HTMLElement;
		const pun = new URLSearchParams(window.location.search).get('prompt');
		myVal.innerHTML = pun as string;
		const modelList = ["sdbase", "dreamshaper", "sdlightning"]

		modelList.forEach(async (model) =>{
			fetchSpecificImage(model);
		});
	};
	setup();


</script>

<Layout title="Ai Ad Generator">
	<div transition:name="title">
		<h1 class="text-cforange-600"><a href="/">Ai Ad Generator</a></h1>
		<h3 class="text-cforange-400"><i>Powered by <a class="underline" href="https://ai.cloudflare.com/">Cloudflare</a></i></h3>
	</div>
	<p class="mb-8 text-center text-cforange-200">
		Here's your final Ad!
	</p>

<style>
	textarea {
		color: black;
	}
	select {
		color: black;
	}
	button {
		border-width: 1px;
		border-style: solid;
		border-radius: 15px;
	}
	p::after {
		content: attr(data-content);
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
	}
	h3 {
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}	
</style>
